{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFromSafe",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFromSol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805461ff01600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d000117905534801561003957600080fd5b50611808806100496000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780637055729814610071578063a472c67114610079578063b1d416fe14610081578063ba414fa614610089578063fa7626d4146100a5575b600080fd5b61006f6100b2565b005b61006f6103b9565b61006f61045f565b61006f6104d7565b61009161057d565b604051901515815260200160405180910390f35b6000546100919060ff1681565b6040516100be90610712565b6100c79061072c565b604051809103906000f0801580156100e3573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911790556040516101109061071f565b604051809103906000f08015801561012c573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526529b2b73232b960d11b602082015261017490336106a8565b60408051808201909152600681526502a37b5b2b7160d51b60208201526001546101a791906001600160a01b03166106a8565b600154604051634e6ec24760e01b8152600560048201526103e860248201526001600160a01b0390911690634e6ec24790604401600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b5050600154604051634e6ec24760e01b8152600760048201526103e860248201526001600160a01b039091169250634e6ec2479150604401600060405180830381600087803b15801561025b57600080fd5b505af115801561026f573d6000803e3d6000fd5b5050600154604051634e6ec24760e01b8152600960048201526103e860248201526001600160a01b039091169250634e6ec2479150604401600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260056004820152620100009091046001600160a01b0316925063ca669fa79150602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b505060015460025460405163095ea7b360e01b81526001600160a01b039182166004820152606360248201529116925063095ea7b391506044015b6020604051808303816000875af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b6919061077a565b50565b60005460025460405163ca669fa760e01b81526001600160a01b03918216600482015262010000909204169063ca669fa790602401600060405180830381600087803b15801561040857600080fd5b505af115801561041c573d6000803e3d6000fd5b50506001546040516323b872dd60e01b81526005600482015260096024820152601460448201526001600160a01b0390911692506323b872dd9150606401610373565b600254600154604051638f57438f60e01b81526001600160a01b039182166004820152600560248201526009604482015260146064820152911690638f57438f90608401600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b50505050565b60005460025460405163ca669fa760e01b81526001600160a01b03918216600482015262010000909204169063ca669fa790602401600060405180830381600087803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505060015460405163a255004f60e01b81526005600482015260096024820152601460448201526001600160a01b03909116925063a255004f9150606401610373565b60008054610100900460ff161561059d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106a35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161062b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016107c8565b60408051601f1981840301815290829052610645916107f9565b6000604051808303816000865af19150503d8060008114610682576040519150601f19603f3d011682016040523d82523d6000602084013e610687565b606091505b509150508080602001905181019061069f919061077a565b9150505b919050565b6106ed82826040516024016106be929190610815565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526106f1565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610d4d8061085a83390190565b61022c806115a783390190565b6040815260006107506040830160048152630aa888ab60e31b602082015260400190565b82810360208401526107738160048152630aa888ab60e31b602082015260400190565b9392505050565b60006020828403121561078c57600080fd5b8151801515811461077357600080fd5b60005b838110156107b757818101518382015260200161079f565b838111156104d15750506000910152565b6001600160e01b03198316815281516000906107eb81600485016020870161079c565b919091016004019392505050565b6000825161080b81846020870161079c565b9190910192915050565b604081526000835180604084015261083481606085016020880161079c565b6001600160a01b0393909316602083015250601f91909101601f19160160600191905056fe60806040523480156200001157600080fd5b5060405162000d4d38038062000d4d8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b610abc80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634e6ec2471161008c578063a255004f11610066578063a255004f146101a2578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b80634e6ec2471461015c57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101ee565b6040516100e991906108db565b60405180910390f35b61010561010036600461094c565b610280565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610976565b610298565b604051601281526020016100e9565b61010561015736600461094c565b6102bc565b61016f61016a36600461094c565b6102de565b005b61011961017f3660046109b2565b6001600160a01b031660009081526020819052604090205490565b6100dc6103c2565b6101056101b0366004610976565b6103d1565b6101056101c336600461094c565b6104bb565b6101056101d636600461094c565b610536565b6101196101e93660046109d4565b610544565b6060600380546101fd90610a07565b80601f016020809104026020016040519081016040528092919081815260200182805461022990610a07565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b60003361028e81858561056f565b5060019392505050565b6000336102a6858285610693565b6102b185858561070d565b506001949350505050565b60003361028e8185856102cf8383610544565b6102d99190610a57565b61056f565b6001600160a01b0382166103395760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825461034b9190610a57565b90915550506001600160a01b03821660009081526020819052604081208054839290610378908490610a57565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6060600480546101fd90610a07565b6001600160a01b0383166000908152600160209081526040808320338452909152812054600019811461042d576104088382610a6f565b6001600160a01b03861660009081526001602090815260408083203384529091529020555b6001600160a01b03851660009081526020819052604081208054859290610455908490610a6f565b90915550506001600160a01b0384811660008181526020818152604091829020805488019055905186815291928816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600033816104c98286610544565b9050838110156105295760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610330565b6102b1828686840361056f565b60003361028e81858561070d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610330565b6001600160a01b0382166106325760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610330565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061069f8484610544565b9050600019811461070757818110156106fa5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610330565b610707848484840361056f565b50505050565b6001600160a01b0383166107715760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610330565b6001600160a01b0382166107d35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610330565b6001600160a01b0383166000908152602081905260409020548181101561084b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610330565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610882908490610a57565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ce91815260200190565b60405180910390a3610707565b600060208083528351808285015260005b81811015610908578581018301518582016040015282016108ec565b8181111561091a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461094757600080fd5b919050565b6000806040838503121561095f57600080fd5b61096883610930565b946020939093013593505050565b60008060006060848603121561098b57600080fd5b61099484610930565b92506109a260208501610930565b9150604084013590509250925092565b6000602082840312156109c457600080fd5b6109cd82610930565b9392505050565b600080604083850312156109e757600080fd5b6109f083610930565b91506109fe60208401610930565b90509250929050565b600181811c90821680610a1b57607f821691505b602082108103610a3b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6a57610a6a610a41565b500190565b600082821015610a8157610a81610a41565b50039056fea26469706673582212207359bb8363ad39a06f382c6e4bcd09144d44ed7a56b0030f637cf6d54d09fae764736f6c634300080e0033608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101fa806100326000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638f57438f14610030575b600080fd5b61004361003e366004610179565b610045565b005b61005184848484610057565b50505050565b6040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661014d5780873b15151661014d57806101385781610117573d156100f15760203d046020840481600302818311156100d857818303600302610200838002858002030401015b5a6020820110156100ed573d6000803e3d6000fd5b5050505b63f486bc8760e01b60005286600452856024528460445260006064528360845260a46000fd5b639889192360e01b6000528660045285602452846044528360645260846000fd5b632f8aeb3960e11b6000528660045260246000fd5b5050604052505060006060525050565b80356001600160a01b038116811461017457600080fd5b919050565b6000806000806080858703121561018f57600080fd5b6101988561015d565b93506101a66020860161015d565b92506101b46040860161015d565b939692955092936060013592505056fea26469706673582212206a794ac58021bbfde2dea699d0eec16e0600f1a9b3e7f9b13eaadf97e13c530964736f6c634300080e0033a2646970667358221220dbfbff9399dad9468618aab11d2f1ce0408de1ae28dae2656c5a0d063bfa313f64736f6c634300080e0033",
    "sourceMap": "267:5847:30:-:0;;;1609:26:0;;;-1:-1:-1;;;;;;340:32:30;;;;;267:5847;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780637055729814610071578063a472c67114610079578063b1d416fe14610081578063ba414fa614610089578063fa7626d4146100a5575b600080fd5b61006f6100b2565b005b61006f6103b9565b61006f61045f565b61006f6104d7565b61009161057d565b604051901515815260200160405180910390f35b6000546100919060ff1681565b6040516100be90610712565b6100c79061072c565b604051809103906000f0801580156100e3573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169190911790556040516101109061071f565b604051809103906000f08015801561012c573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905560408051808201909152600681526529b2b73232b960d11b602082015261017490336106a8565b60408051808201909152600681526502a37b5b2b7160d51b60208201526001546101a791906001600160a01b03166106a8565b600154604051634e6ec24760e01b8152600560048201526103e860248201526001600160a01b0390911690634e6ec24790604401600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b5050600154604051634e6ec24760e01b8152600760048201526103e860248201526001600160a01b039091169250634e6ec2479150604401600060405180830381600087803b15801561025b57600080fd5b505af115801561026f573d6000803e3d6000fd5b5050600154604051634e6ec24760e01b8152600960048201526103e860248201526001600160a01b039091169250634e6ec2479150604401600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260056004820152620100009091046001600160a01b0316925063ca669fa79150602401600060405180830381600087803b15801561032457600080fd5b505af1158015610338573d6000803e3d6000fd5b505060015460025460405163095ea7b360e01b81526001600160a01b039182166004820152606360248201529116925063095ea7b391506044015b6020604051808303816000875af1158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b6919061077a565b50565b60005460025460405163ca669fa760e01b81526001600160a01b03918216600482015262010000909204169063ca669fa790602401600060405180830381600087803b15801561040857600080fd5b505af115801561041c573d6000803e3d6000fd5b50506001546040516323b872dd60e01b81526005600482015260096024820152601460448201526001600160a01b0390911692506323b872dd9150606401610373565b600254600154604051638f57438f60e01b81526001600160a01b039182166004820152600560248201526009604482015260146064820152911690638f57438f90608401600060405180830381600087803b1580156104bd57600080fd5b505af11580156104d1573d6000803e3d6000fd5b50505050565b60005460025460405163ca669fa760e01b81526001600160a01b03918216600482015262010000909204169063ca669fa790602401600060405180830381600087803b15801561052657600080fd5b505af115801561053a573d6000803e3d6000fd5b505060015460405163a255004f60e01b81526005600482015260096024820152601460448201526001600160a01b03909116925063a255004f9150606401610373565b60008054610100900460ff161561059d5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156106a35760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161062b917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016107c8565b60408051601f1981840301815290829052610645916107f9565b6000604051808303816000865af19150503d8060008114610682576040519150601f19603f3d011682016040523d82523d6000602084013e610687565b606091505b509150508080602001905181019061069f919061077a565b9150505b919050565b6106ed82826040516024016106be929190610815565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526106f1565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610d4d8061085a83390190565b61022c806115a783390190565b6040815260006107506040830160048152630aa888ab60e31b602082015260400190565b82810360208401526107738160048152630aa888ab60e31b602082015260400190565b9392505050565b60006020828403121561078c57600080fd5b8151801515811461077357600080fd5b60005b838110156107b757818101518382015260200161079f565b838111156104d15750506000910152565b6001600160e01b03198316815281516000906107eb81600485016020870161079c565b919091016004019392505050565b6000825161080b81846020870161079c565b9190910192915050565b604081526000835180604084015261083481606085016020880161079c565b6001600160a01b0393909316602083015250601f91909101601f19160160600191905056fe60806040523480156200001157600080fd5b5060405162000d4d38038062000d4d8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b610abc80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80634e6ec2471161008c578063a255004f11610066578063a255004f146101a2578063a457c2d7146101b5578063a9059cbb146101c8578063dd62ed3e146101db57600080fd5b80634e6ec2471461015c57806370a082311461017157806395d89b411461019a57600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd14610127578063313ce5671461013a5780633950935114610149575b600080fd5b6100dc6101ee565b6040516100e991906108db565b60405180910390f35b61010561010036600461094c565b610280565b60405190151581526020016100e9565b6002545b6040519081526020016100e9565b610105610135366004610976565b610298565b604051601281526020016100e9565b61010561015736600461094c565b6102bc565b61016f61016a36600461094c565b6102de565b005b61011961017f3660046109b2565b6001600160a01b031660009081526020819052604090205490565b6100dc6103c2565b6101056101b0366004610976565b6103d1565b6101056101c336600461094c565b6104bb565b6101056101d636600461094c565b610536565b6101196101e93660046109d4565b610544565b6060600380546101fd90610a07565b80601f016020809104026020016040519081016040528092919081815260200182805461022990610a07565b80156102765780601f1061024b57610100808354040283529160200191610276565b820191906000526020600020905b81548152906001019060200180831161025957829003601f168201915b5050505050905090565b60003361028e81858561056f565b5060019392505050565b6000336102a6858285610693565b6102b185858561070d565b506001949350505050565b60003361028e8185856102cf8383610544565b6102d99190610a57565b61056f565b6001600160a01b0382166103395760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b806002600082825461034b9190610a57565b90915550506001600160a01b03821660009081526020819052604081208054839290610378908490610a57565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6060600480546101fd90610a07565b6001600160a01b0383166000908152600160209081526040808320338452909152812054600019811461042d576104088382610a6f565b6001600160a01b03861660009081526001602090815260408083203384529091529020555b6001600160a01b03851660009081526020819052604081208054859290610455908490610a6f565b90915550506001600160a01b0384811660008181526020818152604091829020805488019055905186815291928816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b600033816104c98286610544565b9050838110156105295760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610330565b6102b1828686840361056f565b60003361028e81858561070d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610330565b6001600160a01b0382166106325760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610330565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061069f8484610544565b9050600019811461070757818110156106fa5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610330565b610707848484840361056f565b50505050565b6001600160a01b0383166107715760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610330565b6001600160a01b0382166107d35760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610330565b6001600160a01b0383166000908152602081905260409020548181101561084b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610330565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610882908490610a57565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108ce91815260200190565b60405180910390a3610707565b600060208083528351808285015260005b81811015610908578581018301518582016040015282016108ec565b8181111561091a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461094757600080fd5b919050565b6000806040838503121561095f57600080fd5b61096883610930565b946020939093013593505050565b60008060006060848603121561098b57600080fd5b61099484610930565b92506109a260208501610930565b9150604084013590509250925092565b6000602082840312156109c457600080fd5b6109cd82610930565b9392505050565b600080604083850312156109e757600080fd5b6109f083610930565b91506109fe60208401610930565b90509250929050565b600181811c90821680610a1b57607f821691505b602082108103610a3b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610a6a57610a6a610a41565b500190565b600082821015610a8157610a81610a41565b50039056fea26469706673582212207359bb8363ad39a06f382c6e4bcd09144d44ed7a56b0030f637cf6d54d09fae764736f6c634300080e0033608060405234801561001057600080fd5b50600080546001600160a01b031916331790556101fa806100326000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638f57438f14610030575b600080fd5b61004361003e366004610179565b610045565b005b61005184848484610057565b50505050565b6040516323b872dd60e01b600052836004528260245281604452602060006064600080895af1803d15601f3d116001600051141617163d1515811661014d5780873b15151661014d57806101385781610117573d156100f15760203d046020840481600302818311156100d857818303600302610200838002858002030401015b5a6020820110156100ed573d6000803e3d6000fd5b5050505b63f486bc8760e01b60005286600452856024528460445260006064528360845260a46000fd5b639889192360e01b6000528660045285602452846044528360645260846000fd5b632f8aeb3960e11b6000528660045260246000fd5b5050604052505060006060525050565b80356001600160a01b038116811461017457600080fd5b919050565b6000806000806080858703121561018f57600080fd5b6101988561015d565b93506101a66020860161015d565b92506101b46040860161015d565b939692955092936060013592505056fea26469706673582212206a794ac58021bbfde2dea699d0eec16e0600f1a9b3e7f9b13eaadf97e13c530964736f6c634300080e0033a2646970667358221220dbfbff9399dad9468618aab11d2f1ce0408de1ae28dae2656c5a0d063bfa313f64736f6c634300080e0033",
    "sourceMap": "267:5847:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:421;;;:::i;:::-;;1120:309;;;:::i;1765:504::-;;;:::i;1435:324::-;;;:::i;1865:600:0:-;;;:::i;:::-;;;179:14:31;;172:22;154:41;;142:2;127:18;1865:600:0;;;;;;;1609:26;;;;;;;;;458:421:30;533:25;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;525:5:30;:33;;-1:-1:-1;;;;;;525:33:30;-1:-1:-1;;;;;525:33:30;;;;;;;;;;574:9;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;568:3:30;:15;;-1:-1:-1;;;;;;568:15:30;-1:-1:-1;;;;;568:15:30;;;;;;;;;;594:42;;;;;;;;;;;;-1:-1:-1;;;594:42:30;;;;;;624:10;594:11;:42::i;:::-;646:37;;;;;;;;;;;;-1:-1:-1;;;646:37:30;;;;676:5;;646:37;;;-1:-1:-1;;;;;676:5:30;646:11;:37::i;:::-;694:5;;:29;;-1:-1:-1;;;694:29:30;;714:1;694:29;;;1035:51:31;718:4:30;1102:18:31;;;1095:34;-1:-1:-1;;;;;694:5:30;;;;:11;;1008:18:31;;694:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;733:5:30;;:29;;-1:-1:-1;;;733:29:30;;753:1;733:29;;;1035:51:31;757:4:30;1102:18:31;;;1095:34;-1:-1:-1;;;;;733:5:30;;;;-1:-1:-1;733:11:30;;-1:-1:-1;1008:18:31;;733:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;772:5:30;;:29;;-1:-1:-1;;;772:29:30;;792:1;772:29;;;1035:51:31;796:4:30;1102:18:31;;;1095:34;-1:-1:-1;;;;;772:5:30;;;;-1:-1:-1;772:11:30;;-1:-1:-1;1008:18:31;;772:29:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;811:2:30;;:20;;-1:-1:-1;;;811:20:30;;828:1;811:20;;;1286:51:31;811:2:30;;;;-1:-1:-1;;;;;811:2:30;;-1:-1:-1;811:8:30;;-1:-1:-1;1259:18:31;;811:20:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;841:5:30;;863:3;;841:31;;-1:-1:-1;;;841:31:30;;-1:-1:-1;;;;;863:3:30;;;841:31;;;1035:51:31;869:2:30;1102:18:31;;;1095:34;841:5:30;;;-1:-1:-1;841:13:30;;-1:-1:-1;1008:18:31;;841:31:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;458:421::o;1120:309::-;1165:2;;;1182:3;1165:22;;-1:-1:-1;;;1165:22:30;;-1:-1:-1;;;;;1182:3:30;;;1165:22;;;1286:51:31;1165:2:30;;;;;;:8;;1259:18:31;;1165:22:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1197:5:30;;:46;;-1:-1:-1;;;1197:46:30;;1224:1;1197:46;;;2167:34:31;1236:1:30;2217:18:31;;;2210:43;1240:2:30;2269:18:31;;;2262:34;-1:-1:-1;;;;;1197:5:30;;;;-1:-1:-1;1197:18:30;;-1:-1:-1;2102:18:31;;1197:46:30;1918:384:31;1765:504:30;2021:3;;;2048:5;2021:62;;-1:-1:-1;;;2021:62:30;;-1:-1:-1;;;;;2048:5:30;;;2021:62;;;2585:34:31;2064:1:30;2635:18:31;;;2628:43;2076:1:30;2687:18:31;;;2680:43;2080:2:30;2739:18:31;;;2732:34;2021:3:30;;;:18;;2519:19:31;;2021:62:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:504::o;1435:324::-;1483:2;;;1500:3;1483:22;;-1:-1:-1;;;1483:22:30;;-1:-1:-1;;;;;1500:3:30;;;1483:22;;;1286:51:31;1483:2:30;;;;;;:8;;1259:18:31;;1483:22:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1515:5:30;;:49;;-1:-1:-1;;;1515:49:30;;1545:1;1515:49;;;2167:34:31;1557:1:30;2217:18:31;;;2210:43;1561:2:30;2269:18:31;;;2262:34;-1:-1:-1;;;;;1515:5:30;;;;-1:-1:-1;1515:21:30;;-1:-1:-1;2102:18:31;;1515:49:30;1918:384:31;1865:600:0;1899:4;1920:7;;;;;;;1916:542;;;-1:-1:-1;1951:7:0;;;;;;;;1865:600::o;1916:542::-;1991:17;3070:42;3058:55;3141:16;2031:382;;2251:43;;;1712:64;2251:43;;;1035:51:31;;;-1:-1:-1;;;1102:18:31;;;1095:34;2251:43:0;;;;;;;;;1008:18:31;;;2251:43:0;;;-1:-1:-1;;1712:64:0;;2139:178;;2189:34;;2139:178;;;:::i;:::-;;;;-1:-1:-1;;2139:178:0;;;;;;;;;;2099:237;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2072:264;;;2381:7;2370:27;;;;;;;;;;;;:::i;:::-;2355:42;;2053:360;2031:382;2434:12;1865:600;-1:-1:-1;1865:600:0:o;7210:147:3:-;7278:71;7341:2;7345;7294:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7294:54:3;;;;;;;;;;;;;;-1:-1:-1;;;;;7294:54:3;-1:-1:-1;;;7294:54:3;;;7278:15;:71::i;:::-;7210:147;;:::o;187:384::-;282:14;;135:42;459:2;446:16;;258:21;;282:14;446:16;135:42;496:5;485:68;476:77;;411:153;;187:384;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;358:487:31:-;661:2;650:9;643:21;624:4;687:44;727:2;716:9;712:18;278:1;266:14;;-1:-1:-1;;;305:4:31;296:14;;289:30;344:2;335:12;;206:147;687:44;779:9;771:6;767:22;762:2;751:9;747:18;740:50;807:32;832:6;278:1;266:14;;-1:-1:-1;;;305:4:31;296:14;;289:30;344:2;335:12;;206:147;807:32;799:40;358:487;-1:-1:-1;;;358:487:31:o;1636:277::-;1703:6;1756:2;1744:9;1735:7;1731:23;1727:32;1724:52;;;1772:1;1769;1762:12;1724:52;1804:9;1798:16;1857:5;1850:13;1843:21;1836:5;1833:32;1823:60;;1879:1;1876;1869:12;3056:258;3128:1;3138:113;3152:6;3149:1;3146:13;3138:113;;;3228:11;;;3222:18;3209:11;;;3202:39;3174:2;3167:10;3138:113;;;3269:6;3266:1;3263:13;3260:48;;;-1:-1:-1;;3304:1:31;3286:16;;3279:27;3056:258::o;3319:371::-;-1:-1:-1;;;;;;3504:33:31;;3492:46;;3561:13;;3474:3;;3583:61;3561:13;3633:1;3624:11;;3617:4;3605:17;;3583:61;:::i;:::-;3664:16;;;;3682:1;3660:24;;3319:371;-1:-1:-1;;;3319:371:31:o;3695:274::-;3824:3;3862:6;3856:13;3878:53;3924:6;3919:3;3912:4;3904:6;3900:17;3878:53;:::i;:::-;3947:16;;;;;3695:274;-1:-1:-1;;3695:274:31:o;3974:484::-;4151:2;4140:9;4133:21;4114:4;4183:6;4177:13;4226:6;4221:2;4210:9;4206:18;4199:34;4242:68;4303:6;4298:2;4287:9;4283:18;4276:4;4268:6;4264:17;4242:68;:::i;:::-;-1:-1:-1;;;;;4419:32:31;;;;4412:4;4397:20;;4390:62;-1:-1:-1;4371:2:31;4350:15;;;;-1:-1:-1;;4346:29:31;4331:45;4378:2;4327:54;;3974:484;-1:-1:-1;3974:484:31:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testTransferFrom()": "70557298",
    "testTransferFromSafe()": "a472c671",
    "testTransferFromSol()": "b1d416fe"
  },
  "ast": {
    "absolutePath": "C:\\solidity\\ERC20_Token_Benchmarks\\test\\ERC20.t.sol",
    "id": 21956,
    "exportedSymbols": {
      "BadReturnValueFromERC20OnTransfer_error_amount_ptr": [
        40457
      ],
      "BadReturnValueFromERC20OnTransfer_error_from_ptr": [
        40451
      ],
      "BadReturnValueFromERC20OnTransfer_error_length": [
        40460
      ],
      "BadReturnValueFromERC20OnTransfer_error_sig_ptr": [
        40445
      ],
      "BadReturnValueFromERC20OnTransfer_error_signature": [
        40442
      ],
      "BadReturnValueFromERC20OnTransfer_error_to_ptr": [
        40454
      ],
      "BadReturnValueFromERC20OnTransfer_error_token_ptr": [
        40448
      ],
      "BatchTransfer1155Params_amounts_head_ptr": [
        40478
      ],
      "BatchTransfer1155Params_amounts_length_baseOffset": [
        40493
      ],
      "BatchTransfer1155Params_data_head_ptr": [
        40481
      ],
      "BatchTransfer1155Params_data_length_baseOffset": [
        40496
      ],
      "BatchTransfer1155Params_data_length_basePtr": [
        40484
      ],
      "BatchTransfer1155Params_ids_head_ptr": [
        40475
      ],
      "BatchTransfer1155Params_ids_length_offset": [
        40490
      ],
      "BatchTransfer1155Params_ids_length_ptr": [
        40487
      ],
      "BatchTransfer1155Params_ptr": [
        40472
      ],
      "ConduitBatch1155Transfer": [
        40147
      ],
      "ConduitBatch1155Transfer_amounts_head_offset": [
        40508
      ],
      "ConduitBatch1155Transfer_amounts_length_baseOffset": [
        40514
      ],
      "ConduitBatch1155Transfer_calldata_baseSize": [
        40517
      ],
      "ConduitBatch1155Transfer_from_offset": [
        40502
      ],
      "ConduitBatch1155Transfer_ids_head_offset": [
        40505
      ],
      "ConduitBatch1155Transfer_ids_length_offset": [
        40511
      ],
      "ConduitBatch1155Transfer_usable_head_size": [
        40499
      ],
      "Context": [
        40169
      ],
      "CostPerWord": [
        40466
      ],
      "DEX": [
        43060
      ],
      "DSTest": [
        23742
      ],
      "DefaultFreeMemoryPointer": [
        40303
      ],
      "ERC1155BatchTransferGenericFailure_error_signature": [
        40435
      ],
      "ERC1155BatchTransferGenericFailure_token_ptr": [
        40438
      ],
      "ERC1155_safeBatchTransferFrom_selector": [
        40375
      ],
      "ERC1155_safeBatchTransferFrom_signature": [
        40366
      ],
      "ERC1155_safeTransferFrom_amount_ptr": [
        40350
      ],
      "ERC1155_safeTransferFrom_data_length_offset": [
        40362
      ],
      "ERC1155_safeTransferFrom_data_length_ptr": [
        40356
      ],
      "ERC1155_safeTransferFrom_data_offset_ptr": [
        40353
      ],
      "ERC1155_safeTransferFrom_from_ptr": [
        40341
      ],
      "ERC1155_safeTransferFrom_id_ptr": [
        40347
      ],
      "ERC1155_safeTransferFrom_length": [
        40359
      ],
      "ERC1155_safeTransferFrom_sig_ptr": [
        40338
      ],
      "ERC1155_safeTransferFrom_signature": [
        40335
      ],
      "ERC1155_safeTransferFrom_to_ptr": [
        40344
      ],
      "ERC20": [
        43694
      ],
      "ERC20Test": [
        21955
      ],
      "ERC20_transferFrom_amount_ptr": [
        40328
      ],
      "ERC20_transferFrom_from_ptr": [
        40322
      ],
      "ERC20_transferFrom_length": [
        40331
      ],
      "ERC20_transferFrom_sig_ptr": [
        40319
      ],
      "ERC20_transferFrom_signature": [
        40316
      ],
      "ERC20_transferFrom_to_ptr": [
        40325
      ],
      "ERC721_transferFrom_from_ptr": [
        40384
      ],
      "ERC721_transferFrom_id_ptr": [
        40390
      ],
      "ERC721_transferFrom_length": [
        40393
      ],
      "ERC721_transferFrom_sig_ptr": [
        40381
      ],
      "ERC721_transferFrom_signature": [
        40378
      ],
      "ERC721_transferFrom_to_ptr": [
        40387
      ],
      "ExtraGasBuffer": [
        40463
      ],
      "FreeMemoryPointerSlot": [
        40297
      ],
      "IERC20": [
        40258
      ],
      "IERC20Metadata": [
        40283
      ],
      "Invalid1155BatchTransferEncoding_length": [
        40523
      ],
      "Invalid1155BatchTransferEncoding_ptr": [
        40520
      ],
      "Invalid1155BatchTransferEncoding_selector": [
        40527
      ],
      "MemoryExpansionCoefficient": [
        40469
      ],
      "NoContract_error_length": [
        40406
      ],
      "NoContract_error_sig_ptr": [
        40400
      ],
      "NoContract_error_signature": [
        40397
      ],
      "NoContract_error_token_ptr": [
        40403
      ],
      "OneWord": [
        40288
      ],
      "Slot0x80": [
        40306
      ],
      "Slot0xA0": [
        40309
      ],
      "Slot0xC0": [
        40312
      ],
      "StdStorage": [
        41768
      ],
      "Test": [
        41670
      ],
      "ThreeWords": [
        40294
      ],
      "TokenTransferGenericFailure_error_amount_ptr": [
        40428
      ],
      "TokenTransferGenericFailure_error_from_ptr": [
        40419
      ],
      "TokenTransferGenericFailure_error_id_ptr": [
        40425
      ],
      "TokenTransferGenericFailure_error_length": [
        40431
      ],
      "TokenTransferGenericFailure_error_sig_ptr": [
        40413
      ],
      "TokenTransferGenericFailure_error_signature": [
        40410
      ],
      "TokenTransferGenericFailure_error_to_ptr": [
        40422
      ],
      "TokenTransferGenericFailure_error_token_ptr": [
        40416
      ],
      "TokenTransferrerErrors": [
        40581
      ],
      "TwoWords": [
        40291
      ],
      "Vm": [
        23981
      ],
      "ZeroSlot": [
        40300
      ],
      "console": [
        32045
      ],
      "console2": [
        40109
      ],
      "stdError": [
        41740
      ],
      "stdMath": [
        43005
      ],
      "stdStorage": [
        42858
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:6375:30",
    "nodes": [
      {
        "id": 21761,
        "nodeType": "PragmaDirective",
        "src": "39:23:30",
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ]
      },
      {
        "id": 21762,
        "nodeType": "ImportDirective",
        "src": "64:26:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/lib/forge-std/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 23743,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21763,
        "nodeType": "ImportDirective",
        "src": "91:28:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 43006,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21764,
        "nodeType": "ImportDirective",
        "src": "120:26:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 23982,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21765,
        "nodeType": "ImportDirective",
        "src": "181:32:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/lib/forge-std/src/console2.sol",
        "file": "forge-std/console2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 40110,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21766,
        "nodeType": "ImportDirective",
        "src": "214:26:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/src/ERC20.sol",
        "file": "../src/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 43695,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21767,
        "nodeType": "ImportDirective",
        "src": "241:24:30",
        "absolutePath": "C:/solidity/ERC20_Token_Benchmarks/src/DEX.sol",
        "file": "../src/DEX.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21956,
        "sourceUnit": 43061,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21955,
        "nodeType": "ContractDefinition",
        "src": "267:5847:30",
        "nodes": [
          {
            "id": 21773,
            "nodeType": "UsingForDirective",
            "src": "302:32:30",
            "global": false,
            "libraryName": {
              "id": 21770,
              "name": "stdStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42858,
              "src": "308:10:30"
            },
            "typeName": {
              "id": 21772,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21771,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41768,
                "src": "323:10:30"
              },
              "referencedDeclaration": 41768,
              "src": "323:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$41768_storage_ptr",
                "typeString": "struct StdStorage"
              }
            }
          },
          {
            "id": 21779,
            "nodeType": "VariableDeclaration",
            "src": "340:32:30",
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "351:2:30",
            "scope": 21955,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$23981",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 21775,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21774,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23981,
                "src": "340:2:30"
              },
              "referencedDeclaration": 23981,
              "src": "340:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$23981",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 21777,
                  "name": "HEVM_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22063,
                  "src": "359:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 21776,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 23981,
                "src": "356:2:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$23981_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 21778,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "356:16:30",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$23981",
                "typeString": "contract Vm"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21782,
            "nodeType": "VariableDeclaration",
            "src": "378:19:30",
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "392:5:30",
            "scope": 21955,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$43694",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 21781,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21780,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43694,
                "src": "378:5:30"
              },
              "referencedDeclaration": 43694,
              "src": "378:5:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$43694",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21785,
            "nodeType": "VariableDeclaration",
            "src": "403:15:30",
            "constant": false,
            "mutability": "mutable",
            "name": "dex",
            "nameLocation": "415:3:30",
            "scope": 21955,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_DEX_$43060",
              "typeString": "contract DEX"
            },
            "typeName": {
              "id": 21784,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21783,
                "name": "DEX",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43060,
                "src": "403:3:30"
              },
              "referencedDeclaration": 43060,
              "src": "403:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DEX_$43060",
                "typeString": "contract DEX"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21788,
            "nodeType": "VariableDeclaration",
            "src": "424:27:30",
            "constant": false,
            "mutability": "mutable",
            "name": "stdstore",
            "nameLocation": "443:8:30",
            "scope": 21955,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_StdStorage_$41768_storage",
              "typeString": "struct StdStorage"
            },
            "typeName": {
              "id": 21787,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21786,
                "name": "StdStorage",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41768,
                "src": "424:10:30"
              },
              "referencedDeclaration": 41768,
              "src": "424:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_StdStorage_$41768_storage_ptr",
                "typeString": "struct StdStorage"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21878,
            "nodeType": "FunctionDefinition",
            "src": "458:421:30",
            "body": {
              "id": 21877,
              "nodeType": "Block",
              "src": "482:397:30",
              "statements": [
                {
                  "expression": {
                    "id": 21798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21791,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21782,
                      "src": "525:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$43694",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "55444558",
                          "id": 21795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "543:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_967280a6bfdd969496b53706a4fdedbcd25e3e0f9acba09c0fe4ca4f9a4b9167",
                            "typeString": "literal_string \"UDEX\""
                          },
                          "value": "UDEX"
                        },
                        {
                          "hexValue": "55444558",
                          "id": 21796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "551:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_967280a6bfdd969496b53706a4fdedbcd25e3e0f9acba09c0fe4ca4f9a4b9167",
                            "typeString": "literal_string \"UDEX\""
                          },
                          "value": "UDEX"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_967280a6bfdd969496b53706a4fdedbcd25e3e0f9acba09c0fe4ca4f9a4b9167",
                            "typeString": "literal_string \"UDEX\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_967280a6bfdd969496b53706a4fdedbcd25e3e0f9acba09c0fe4ca4f9a4b9167",
                            "typeString": "literal_string \"UDEX\""
                          }
                        ],
                        "id": 21794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "533:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20_$43694_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20)"
                        },
                        "typeName": {
                          "id": 21793,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21792,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43694,
                            "src": "537:5:30"
                          },
                          "referencedDeclaration": 43694,
                          "src": "537:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$43694",
                            "typeString": "contract ERC20"
                          }
                        }
                      },
                      "id": 21797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "533:25:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$43694",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "525:33:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$43694",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 21799,
                  "nodeType": "ExpressionStatement",
                  "src": "525:33:30"
                },
                {
                  "expression": {
                    "id": 21805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21800,
                      "name": "dex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21785,
                      "src": "568:3:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$43060",
                        "typeString": "contract DEX"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "574:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_DEX_$43060_$",
                          "typeString": "function () returns (contract DEX)"
                        },
                        "typeName": {
                          "id": 21802,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21801,
                            "name": "DEX",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43060,
                            "src": "578:3:30"
                          },
                          "referencedDeclaration": 43060,
                          "src": "578:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DEX_$43060",
                            "typeString": "contract DEX"
                          }
                        }
                      },
                      "id": 21804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:9:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_DEX_$43060",
                        "typeString": "contract DEX"
                      }
                    },
                    "src": "568:15:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DEX_$43060",
                      "typeString": "contract DEX"
                    }
                  },
                  "id": 21806,
                  "nodeType": "ExpressionStatement",
                  "src": "568:15:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "53656e646572",
                        "id": 21810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "606:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e648c57cd300a3c8a907b9d3ef74debc2c126bdaffb9957a359a1bd7da593af8",
                          "typeString": "literal_string \"Sender\""
                        },
                        "value": "Sender"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 21813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "624:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "624:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "616:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "616:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "616:19:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e648c57cd300a3c8a907b9d3ef74debc2c126bdaffb9957a359a1bd7da593af8",
                          "typeString": "literal_string \"Sender\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21807,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32045,
                        "src": "594:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$32045_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 21809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24740,
                      "src": "594:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 21816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "594:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21817,
                  "nodeType": "ExpressionStatement",
                  "src": "594:42:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "546f6b656e20",
                        "id": 21821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "658:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7156e7f8a24d6f3881ba9650deaa0523dd6b143e68801be2ec9c83029aec686b",
                          "typeString": "literal_string \"Token \""
                        },
                        "value": "Token "
                      },
                      {
                        "arguments": [
                          {
                            "id": 21824,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21782,
                            "src": "676:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$43694",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$43694",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 21823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "668:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21822,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "668:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "668:14:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7156e7f8a24d6f3881ba9650deaa0523dd6b143e68801be2ec9c83029aec686b",
                          "typeString": "literal_string \"Token \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21818,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32045,
                        "src": "646:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$32045_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 21820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24740,
                      "src": "646:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 21826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "646:37:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21827,
                  "nodeType": "ExpressionStatement",
                  "src": "646:37:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 21833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "714:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 21832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "706:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21831,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "706:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "706:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "718:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 21828,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "694:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43514,
                      "src": "694:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "694:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21837,
                  "nodeType": "ExpressionStatement",
                  "src": "694:29:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "37",
                            "id": 21843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "753:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            },
                            "value": "7"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_7_by_1",
                              "typeString": "int_const 7"
                            }
                          ],
                          "id": 21842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "745:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "745:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 21838,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "733:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43514,
                      "src": "733:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21847,
                  "nodeType": "ExpressionStatement",
                  "src": "733:29:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "39",
                            "id": 21853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "792:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            }
                          ],
                          "id": 21852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "784:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21851,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "784:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "784:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "796:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 21848,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "772:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21850,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43514,
                      "src": "772:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 21856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "772:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21857,
                  "nodeType": "ExpressionStatement",
                  "src": "772:29:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 21863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "828:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 21862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "820:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "820:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "820:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21858,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21779,
                        "src": "811:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23981",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23830,
                      "src": "811:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "811:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21866,
                  "nodeType": "ExpressionStatement",
                  "src": "811:20:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21872,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21785,
                            "src": "863:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 21871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "855:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "855:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "855:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3939",
                        "id": 21874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "869:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99_by_1",
                          "typeString": "int_const 99"
                        },
                        "value": "99"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_99_by_1",
                          "typeString": "int_const 99"
                        }
                      ],
                      "expression": {
                        "id": 21867,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "841:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43222,
                      "src": "841:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:31:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21876,
                  "nodeType": "ExpressionStatement",
                  "src": "841:31:30"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "467:5:30",
            "parameters": {
              "id": 21789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:2:30"
            },
            "returnParameters": {
              "id": 21790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:30"
            },
            "scope": 21955,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21905,
            "nodeType": "FunctionDefinition",
            "src": "1120:309:30",
            "body": {
              "id": 21904,
              "nodeType": "Block",
              "src": "1155:274:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21886,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21785,
                            "src": "1182:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 21885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1174:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21884,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1174:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1174:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21881,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21779,
                        "src": "1165:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23981",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23830,
                      "src": "1165:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1165:22:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21889,
                  "nodeType": "ExpressionStatement",
                  "src": "1165:22:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 21895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1224:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 21894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1216:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21893,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1216:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1216:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "39",
                            "id": 21899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1236:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            }
                          ],
                          "id": 21898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1228:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21897,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1228:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1228:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 21901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1240:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 21890,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "1197:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43254,
                      "src": "1197:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1197:46:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21903,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:46:30"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "1129:16:30",
            "parameters": {
              "id": 21879,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:2:30"
            },
            "returnParameters": {
              "id": 21880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1155:0:30"
            },
            "scope": 21955,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21932,
            "nodeType": "FunctionDefinition",
            "src": "1435:324:30",
            "body": {
              "id": 21931,
              "nodeType": "Block",
              "src": "1473:286:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21913,
                            "name": "dex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21785,
                            "src": "1500:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DEX_$43060",
                              "typeString": "contract DEX"
                            }
                          ],
                          "id": 21912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1492:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21911,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1492:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1492:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21908,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21779,
                        "src": "1483:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$23981",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 21910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23830,
                      "src": "1483:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:22:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21916,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:22:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 21922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1545:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 21921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1537:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21920,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1537:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1537:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "39",
                            "id": 21926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1557:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            }
                          ],
                          "id": 21925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1549:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1549:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1549:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 21928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 21917,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21782,
                        "src": "1515:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$43694",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 21919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFromSol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43315,
                      "src": "1515:21:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1515:49:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21930,
                  "nodeType": "ExpressionStatement",
                  "src": "1515:49:30"
                }
              ]
            },
            "functionSelector": "b1d416fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFromSol",
            "nameLocation": "1444:19:30",
            "parameters": {
              "id": 21906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1463:2:30"
            },
            "returnParameters": {
              "id": 21907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1473:0:30"
            },
            "scope": 21955,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21954,
            "nodeType": "FunctionDefinition",
            "src": "1765:504:30",
            "body": {
              "id": 21953,
              "nodeType": "Block",
              "src": "1804:465:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21940,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21782,
                            "src": "2048:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$43694",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$43694",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 21939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2040:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2040:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2040:14:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 21944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2064:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "id": 21943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2056:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2056:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2056:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "39",
                            "id": 21948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2076:1:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            }
                          ],
                          "id": 21947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2068:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21946,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2068:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2068:10:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3230",
                        "id": 21950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2080:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20_by_1",
                          "typeString": "int_const 20"
                        }
                      ],
                      "expression": {
                        "id": 21935,
                        "name": "dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21785,
                        "src": "2021:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DEX_$43060",
                          "typeString": "contract DEX"
                        }
                      },
                      "id": 21937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transferERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43045,
                      "src": "2021:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256) external"
                      }
                    },
                    "id": 21951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:62:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21952,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:62:30"
                }
              ]
            },
            "functionSelector": "a472c671",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFromSafe",
            "nameLocation": "1774:20:30",
            "parameters": {
              "id": 21933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1794:2:30"
            },
            "returnParameters": {
              "id": 21934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1804:0:30"
            },
            "scope": 21955,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21768,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23742,
              "src": "289:6:30"
            },
            "id": 21769,
            "nodeType": "InheritanceSpecifier",
            "src": "289:6:30"
          }
        ],
        "canonicalName": "ERC20Test",
        "contractDependencies": [
          43060,
          43694
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21955,
          23742
        ],
        "name": "ERC20Test",
        "nameLocation": "276:9:30",
        "scope": 21956,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 30
}